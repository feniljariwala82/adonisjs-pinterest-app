@layout('layouts/main')
@set('title', 'Edit')

@section('content')
<div class="container">

  <nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
    <ol class="breadcrumb">
      <li class="breadcrumb-item"><a href="{{ route('post.index') }}">Post</a></li>
      <li class="breadcrumb-item active" aria-current="page">Edit</li>
    </ol>
  </nav>

  <div class="row">
    {{--  preview  --}}
    <div class="col-12 col-md-6">
      <h4 class="mb-4 fs-4 fw-bold text-center">Image Preview</h4>

      <div class="d-flex justify-content-center align-items-start">

        {{--  original image preview  --}}
        <div class="col-6">
          <p class="text-center">Old Image</p>
          <img src="{{ post.image_url }}" class="img-thumbnail" alt="Image" id="oldImage">
        </div>

        {{--  new image preview  --}}
        <div class="col-6 ms-2" id="imgContainer" style="display:none;">
          <p class="mt-3 text-center">New Image</p>
          <img src="" class="img-thumbnail" alt="Image" id="upImage">
        </div>
      </div>
    </div>

    {{--  edit data  --}}
    <div class="col-12 col-md-6">

      <h4 class="mb-4 fs-4 fw-bold text-center mt-3 mt-sm-0">Edit Post</h4>

      <form action="{{ route('post.store') }}" method="POST" id="myForm">
        {{ csrfField() }}

        <div class="d-flex flex-column justify-content-center align-items-center">

          {{--  alert container starts  --}}
          <div class="col-12 col-md-10 col-lg-8 col-xl-7 col-xxl-6">
            <div class="alert alert-dismissible fade show" role="alert" id="alertContainer" style="display:none;">
              <p id="alertMsg"></p>
              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
          </div>
          {{--  alert container starts  --}}

          <div class="col-12 col-md-10 col-lg-8 col-xl-7 col-xxl-6">
            {{--  title starts  --}}
            <div class="form-floating mb-3">
              <input type="text" class="form-control" id="titleInput" name="title" placeholder="create song"
                value="{{ post.title }}" required>
              <label for="floatingInput">Post Title</label>
            </div>
            {{--  title ends  --}}

            {{--  description starts  --}}
            <div class="form-floating mb-3">
              <textarea class="form-control" placeholder="Leave a description here" id="descriptionInput"
                name="description" style="height: 100px" value="{{post.description}}" required></textarea>
              <label for="floatingTextarea2">Post Description</label>
            </div>
            <script>
              const $desc = document.getElementById('descriptionInput')
              $desc.innerHTML = "{{ post.description }}"

            </script>
            {{--  description ends  --}}

            {{--  postImage dropdown starts  --}}
            <div class="form-floating mb-3">
              <div class="input-group mb-3">
                <label class="input-group-text" for="inputGroupFile01">Upload</label>
                <input type="file" class="form-control" id="postImage" name="postImage"
                  value="{{ flashMessages.get('postImage', '') }}">
              </div>
            </div>
            {{--  postImage dropdown ends  --}}

            {{--  tag edit component starts  --}}
            @!component('components/tag/input', {
            tags: post.tags
            })
            {{--  tag edit component starts  --}}

            {{--  buttons  --}}
            <button class="btn btn-primary mt-2" id="submit">Update Post</button>
          </div>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
  $(document).ready(() => {
    // alert
    const $alert = $('#alertContainer')
    const $alertMsg = $("#alertMsg")
    const showErrorAlert = (message) => {
      $alert.css('display', 'block').addClass('alert-danger')
      $alertMsg.append(`<strong>Error </strong>${message}`)
    }

    $('#closeBtn').on('click', function () {
      $('#btn').addClass('fade')
    })

    // let file
    $('input[type="file"]').change(function (e) {
      console.log('changed')
      const fileName = e.target.files[0].name;

      const reader = new FileReader();
      reader.onload = (e) => {
        // get loaded data and render thumbnail.
        $("#imgContainer").css('display', 'block');
        $("#upImage").attr('src', e.target.result);
      };
      // read the image file as a data URL.
      file = this.files[0]
      reader.readAsDataURL(this.files[0]);
    });

    let formData = new FormData()
    // default value of new image to false, making update image field optional
    formData.append('newImage', false)

    // on image change adding image to the file object, that we can use in form data
    let file
    $('#postImage').on('change', function (e) {
      e.preventDefault()
      file = this.files[0]
    })

    /**
     * submit form using ajax
     */
    $('#submit').on('click', async (e) => {
      e.preventDefault()

      // spinner
      spinner.startLoading()

      // appending form data
      formData.append('title', $('#titleInput').val())
      formData.append('description', $('#descriptionInput').val())
      if (file) {
        formData.append('postImage', file)
      }
      // fetching value from tag input
      const tags = JSON.parse($("#tags").val())
      for (let i = 0; i < tags.length; i++) {
        formData.append('tags[]', tags[i]);
      }

      // sending the request
      try {
        await $.ajax({
          url: "{{ route('post.update', {id: post.id }) }}",
          method: 'PUT',
          data: formData,
          cache: false,
          contentType: false,
          processData: false,
          timeout: 60000,
          headers: {
            'X-XSRF-TOKEN': helper.getCookie('XSRF-TOKEN'),
          },
        })

        window.location.href = "{{ route('post.index') }}"
      } catch (error) {
        console.log(error)
        /**
         * On error resetting form data for data duplication,
         */
        formData = new FormData()
        toast.error(error.responseText)
      } finally {
        spinner.stopLoading()
      }
    })
  })

</script>
@endsection
